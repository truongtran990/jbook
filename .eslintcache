[{"D:\\Developments\\typescript\\learn-ts\\jbook\\src\\index.tsx":"1","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\components\\code-editor.tsx":"2","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\components\\preview.tsx":"3","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\bundler\\index.ts":"4","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\bundler\\plugins\\fetch-plugin.ts":"5","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"6","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\components\\code-cell.tsx":"7","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\components\\resizable.tsx":"8"},{"size":555,"mtime":1690123009303,"results":"9","hashOfConfig":"10"},{"size":2339,"mtime":1690123634152,"results":"11","hashOfConfig":"10"},{"size":1227,"mtime":1690124008040,"results":"12","hashOfConfig":"10"},{"size":868,"mtime":1689957978370,"results":"13","hashOfConfig":"10"},{"size":3250,"mtime":1689957978371,"results":"14","hashOfConfig":"10"},{"size":2095,"mtime":1689957978371,"results":"15","hashOfConfig":"10"},{"size":975,"mtime":1690125034223,"results":"16","hashOfConfig":"10"},{"size":996,"mtime":1690208668152,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1adxqzh",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Developments\\typescript\\learn-ts\\jbook\\src\\index.tsx",[],["37","38"],"D:\\Developments\\typescript\\learn-ts\\jbook\\src\\components\\code-editor.tsx",[],"D:\\Developments\\typescript\\learn-ts\\jbook\\src\\components\\preview.tsx",[],"D:\\Developments\\typescript\\learn-ts\\jbook\\src\\bundler\\index.ts",[],"D:\\Developments\\typescript\\learn-ts\\jbook\\src\\bundler\\plugins\\fetch-plugin.ts",[],"D:\\Developments\\typescript\\learn-ts\\jbook\\src\\bundler\\plugins\\unpkg-path-plugin.ts",["39"],"import axios from \"axios\";\r\nimport localforage from \"localforage\";\r\n\r\nimport * as esbuild from \"esbuild-wasm\";\r\n\r\nexport const fileCache = localforage.createInstance({\r\n  // configuration object\r\n  name: \"filecache\",\r\n});\r\n\r\nexport const unpkgPathPlugin = () => {\r\n  // return a object is a plugin that works inside of its esbuild.\r\n  /* \r\n  return an object\r\n    - name (string): for debugging\r\n    - setup (function):\r\n        + is going to be called automatically by esbuild with a single argument - build\r\n            + build argument: represents the building process: the entire process is: \r\n                + finding some file\r\n                + parsing it\r\n                + transpiling it\r\n                + joining a bunch of different files together\r\n            + we can override behaviour of build process with .onResolve, .onLoad\r\n\r\n  */\r\n  return {\r\n    name: \"unpkg-path-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      /* \r\n      trying to figure out where the file is stored or what the actual path to the file  \r\n      */\r\n      //  Handle root entry file of index.js\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n        console.log(\"onResolve index.js\");\r\n        return {\r\n          path: \"index.js\",\r\n          namespace: \"a\",\r\n        };\r\n      });\r\n\r\n      // Handle relative paths in module\r\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\r\n        console.log(\"onResolve\", args);\r\n        return {\r\n          namespace: \"a\",\r\n          path: new URL(args.path, \"https://unpkg.com\" + args.resolveDir + \"/\")\r\n            ?.href,\r\n        };\r\n      });\r\n\r\n      // handle main file of module\r\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\r\n        console.log(\"onResolve\", args);\r\n        return {\r\n          namespace: \"a\",\r\n          path: `https://unpkg.com/${args.path}`,\r\n        };\r\n        /* else if (args.path === \"tiny-test-pkg\") {\r\n          return {\r\n            path: \"https://unpkg.com/tiny-test-pkg@1.0.0/index.js\",\r\n            namespace: \"a\",\r\n          };\r\n        } */\r\n      });\r\n    },\r\n  };\r\n};\r\n","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\components\\code-cell.tsx",["40"],"import { useState } from \"react\";\r\n\r\nimport CodeEditor from \"./code-editor\";\r\nimport Preview from \"./preview\";\r\nimport bundle from \"../bundler\";\r\nimport Resizable from \"./resizable\";\r\n\r\nconst CodeCell = () => {\r\n  const [rawInput, setRawInput] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const handleSubmitInput = async () => {\r\n    // transpile the rawInput to js code\r\n    const output = await bundle(rawInput);\r\n\r\n    setCode(output);\r\n  };\r\n\r\n  return (\r\n    <Resizable direction=\"vertical\">\r\n      <div\r\n        className=\"codeCell\"\r\n        style={{ height: \"100%\", display: \"flex\", flexDirection: \"row\" }}\r\n      >\r\n        <Resizable direction=\"horizontal\">\r\n          <CodeEditor\r\n            initialValue=\"const a = 1;\"\r\n            onChange={(value) => {\r\n              setRawInput(value);\r\n            }}\r\n          />\r\n        </Resizable>\r\n        <Preview code={code} />\r\n      </div>\r\n    </Resizable>\r\n  );\r\n};\r\n\r\nexport default CodeCell;\r\n","D:\\Developments\\typescript\\learn-ts\\jbook\\src\\components\\resizable.tsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":12,"column":9,"nodeType":"47","messageId":"48","endLine":12,"endColumn":26},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'handleSubmitInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]